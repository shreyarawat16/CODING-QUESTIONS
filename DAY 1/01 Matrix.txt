class Solution {
public:


    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n= mat.size(), m= mat[0].size();
        vector<vector<int>> ans= mat;
        vector<vector<int>> vis(n, vector<int>(m,0));
         queue<pair<pair<int, int>, int>>q;
    
    int dr[]={-1,0,1,0};
    int dc[]={0,1,0,-1};
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(mat[i][j]==0){
                   q.push({{i,j},0});
                   vis[i][j]=1;
                }
            }
        }
         while(!q.empty()){
        int row= q.front().first.first;
        int col= q.front().first.second;
        int dist= q.front().second;
        ans[row][col]= dist;
        q.pop();
        for(int i=0; i<4; i++){
            int nr= row+dr[i];
            int nc= col+dc[i];
            if(nr>=0 && nr<n && nc>=0 && nc<m && mat[nr][nc]==1 && !vis[nr][nc]){
                q.push({{nr,nc}, dist+1});
                vis[nr][nc]=1;
            }
        }
    }
return ans;
    }
};